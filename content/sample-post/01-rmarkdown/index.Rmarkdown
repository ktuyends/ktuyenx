---
title: "Hugo Apero Post using R Markdown"
layout: single-sidebar
sidebar_left: true
date: "2022-07-15"
publishDate: "2022-07-15"
lastUpdated: "2022-07-15"
slug: test-r-markdown
categories:
  - Sample
tags:
  - Sample
subtitle: "Kiểm tra một số cú pháp khi viết bài trong blog sử dụng định dạng R Markdown."
summary: "Kiểm tra một số cú pháp khi viết bài trong blog sử dụng định dạng R Markdown."
featured: yes
links:
  - icon: map-marked-alt
    icon_pack: fas
    name: Interactive Map
    url: https://goo.gl/maps/XaCozrwHuGMs7ypMA
---

## 1. Basic Markdown

### 1.1. Math

Example from the [mathjax demo](https://www.mathjax.org/#demo):

When `\(a \ne 0\)`, there are two solutions to \\(ax^2 + bx + c = 0\\) and they are

\$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$

If I have a random \$ and another \$ in my text.

\$$sd = \sqrt{\frac{\sum_{i=0}^{n}{(x_i-\bar x)^2}}{(n-1)} }$$

### 1.2. Heading

```markdown
## h2 Heading {#custom-id}
### h3 Heading
#### h4 Heading
##### h5 Heading
###### h6 Heading
```

### 1.3. Comments

```markdown
<!--
This is a comment
-->
```

### 1.4. Format:

```markdown
*rendered as italicized text*
**rendered as bold text**
***bold and italics***
~~Strike through this text.~~
```

### 1.5. Blockquotes

```markdown
> Đây là một đoạn code
>> Đây là một đoạn code trong một đoạn code
```

### 1.6. List

Dạng 1:

```markdown
1. Lorem ipsum dolor sit amet
2. Consectetur adipiscing elit
3. Integer molestie lorem at massa
```

Dạng 2:

```markdown
- Facilisis in pretium nisl aliquet
- Nulla volutpat aliquam velit
    - Phasellus iaculis neque
    - Purus sodales ultricies
```

Dạng 3, task list:

```markdown
- [x] Write the press release
- [ ] Update the website
- [ ] Contact the media
```

### 1.7. Code

**Inline:**

```markdown
In this example, `<section></section>` should be wrapped as **code**.
```

<details>
<summary>
Hide Code
</summary>

```python
import matplotlib.pyplot as plt
import numpy as np

t = np.arange(0.0, 2.0, 0.01)
s = 1 + np.sin(2*np.pi*t)
plt.plot(t, s)

plt.xlabel('time (s)')
plt.ylabel('voltage (mV)')
plt.title('About as simple as it gets, folks')
plt.grid(True)
plt.savefig("test.png")
plt.show()
```

</details>

**Gist:**

{{< gist spf13 7896402 >}}

### 1.8. Table

| Option | Description |
| ------ | ----------- |
| data   | path to data files to supply the data that will be passed into templates. |
| engine | engine to be used for processing templates. Handlebars is the default. |
| ext    | extension to be used for dest files. |

### 1.9. Link


```markdown
<https://assemble.io>

<contact@revolunet.com>

[Assemble](https://assemble.io)

[Upstage](https://github.com/upstage/ "Visit Upstage!")
```

### 1.10. Footnotes

```markdown
This is a digital footnote[^1].
This is a footnote with "label"[^label]

[^1]: This is a digital footnote
[^label]: This is a footnote with "label"
```

### 1.11. Image & Figure

```markdown
![Minion](https://octodex.github.com/images/minion.png)

![Alt text](https://octodex.github.com/images/stormtroopocat.jpg "The Stormtroopocat")
```

```html
<img src="./featured.png/" width=80%>
```

### 1.12. Shortcodes

**Chèn Vimeo**

{{< vimeo 146022717 >}}

**Chèn Youtube**

{{< youtube KRCTOOJ7JrM >}}


## 2. R Code Chunk

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

You can embed an R code chunk like this:

```{r cars}
summary(cars)
fit <- lm(dist ~ speed, data = cars)
fit
```

## 3. R Plots

You can also embed plots. See Figure \@ref(fig:pie) for example:

```{r pie, fig.cap='A fancy pie chart.', tidy=FALSE, out.width = '70%', fig.align='center'}
par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),
  col = c('#0292D8', '#F7EA39', '#C4B632'),
  init.angle = -50, border = NA
)
```

## 4. Python in R Markdown

```{python, fig.align='center'}
import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```
